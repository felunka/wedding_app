services:
  db:
    image: postgres:13.1-alpine
    hostname: ${POSTGRES_HOSTNAME:-db}
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: wedding_app
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
  web:
    build: .
    command: bash -c "rails db:migrate && rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - active-storage:/app/storage
    networks:
      - reverse_proxy
      - default
    depends_on:
      - db
    environment:
      RAILS_MASTER_KEY: ${RAILS_MASTER_KEY:?err}
      POSTGRES_HOSTNAME: ${POSTGRES_HOSTNAME:-db}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?err}
      DOMAIN: ${DOMAIN:?err}
      RAILS_ENV: production
      RAILS_SERVE_STATIC_FILES: 'true'
      RAILS_LOG_TO_STDOUT: 'true'
    labels:
      - traefik.enable=true
      - traefik.docker.network=reverse_proxy
      - traefik.http.routers.${ROUTER_NAME:-wedding_app}.rule=Host(`${DOMAIN:?err}`)
      - traefik.http.routers.${ROUTER_NAME:-wedding_app}.tls.certresolver=letsencrypt
volumes:
  db-data:
  active-storage:
networks:
  reverse_proxy:
    name: reverse_proxy
